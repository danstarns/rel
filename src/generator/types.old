import { Fields, generateObjectFields } from "./fields"
import { generateObjectRelation } from "./relations"
import { Relations } from "../types"

export function convertToSchemaType(
  name,
  fields: Fields,
  relations: Relations
) {
  const gqlFields = []
  gqlFields.push(`id: UUID!`)

  Object.entries(fields).forEach((fieldObj) => {
    gqlFields.push(generateObjectFields(...fieldObj))
  })

  gqlFields.push(`createdAt: DateTime!`)
  gqlFields.push(`updatedAt: DateTime!`)

  if (relations) {
    Object.entries(relations).forEach((relObj) => {
      const { field } = generateObjectRelation(...relObj)
      gqlFields.push()
    })
  }

  return `type ${name} { 
  ${gqlFields.join("\n")}
}`
}
